{"version":3,"sources":["SeasonDisplay.js","Spinner.js","App.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","_ref","season","lat","month","getSeason","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","props","message","defaultProps","App","state","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","latitude","coords","_this","setState","err","_this$state","this","src_SeasonDisplay_0","src_Spinner","renderContent","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"4LAGMA,SAAe,CACnBC,OAAQ,CACNC,KAAM,mCACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,iCACNC,SAAU,eAwBCE,EAZO,SAAAC,GAAa,IAC3BC,EATU,SAACC,EAAKC,GACtB,OAAIA,EAAQ,GAAKA,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,SAKfE,CADkBJ,EAAVE,KACO,IAAIG,MAAOC,YADRC,EAENb,EAAaO,GAAhCL,EAFyBW,EAEzBX,KAAMC,EAFmBU,EAEnBV,SACd,OACEW,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBX,IAChCO,EAAAC,EAAAC,cAAA,KAAGC,UAAS,GAAAC,OAAKf,EAAL,6BACZW,EAAAC,EAAAC,cAAA,UAAKd,GACLY,EAAAC,EAAAC,cAAA,KAAGC,UAAS,GAAAC,OAAKf,EAAL,gCC3BZgB,EAAU,SAAAC,GAAS,IACfC,EAAYD,EAAZC,QACR,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBI,KAK3CF,EAAQG,aAAe,CACrBD,QAAS,cAGIF,QCwBAI,6MAlCbC,MAAQ,CACNhB,IAAK,KACLiB,aAAc,MAGhBC,kBAAoB,WAElBC,OAAOC,UAAUC,YAAYC,mBAC3B,SAAAC,GAAY,IACFC,EAAaD,EAASE,OAAtBD,SACRE,EAAKC,SAAS,CAAE3B,IAAKwB,KAEvB,SAAAI,GACEF,EAAKC,SAAS,CAAEV,aAAcW,EAAIf,4FAKxB,IAAAgB,EACgBC,KAAKd,MAA3BhB,EADM6B,EACN7B,IAAKiB,EADCY,EACDZ,aAEb,OAAIA,IAAiBjB,EACZM,EAAAC,EAAAC,cAAA,oBAAYS,IACTA,GAAgBjB,EACnBM,EAAAC,EAAAC,cAACuB,EAAD,CAAe/B,IAAKA,IAEpBM,EAAAC,EAAAC,cAACwB,EAAD,CAASnB,QAAQ,oEAI1B,OAAOP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOqB,KAAKG,wBA/BpBC,aCAlBC,IAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.1091a368.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SeasonDisplay.scss\";\n\nconst seasonConfig = {\n  summer: {\n    text: \"Let's hit the beach 😎\",\n    iconName: \"sun\"\n  },\n  winter: {\n    text: \"Brr, it is chilly ☃️\",\n    iconName: \"snowflake\"\n  }\n};\n\nconst getSeason = (lat, month) => {\n  if (month > 2 && month < 9) {\n    return lat > 0 ? \"summer\" : \"winter\";\n  } else {\n    return lat > 0 ? \"winter\" : \"summer\";\n  }\n};\n\nconst SeasonDisplay = ({ lat }) => {\n  const season = getSeason(lat, new Date().getMonth());\n  const { text, iconName } = seasonConfig[season];\n  return (\n    <div className={`season-display ${season}`}>\n      <i className={`${iconName} massive icon icon-left`} />\n      <h1>{text}</h1>\n      <i className={`${iconName} massive icon icon-right`} />\n    </div>\n  );\n};\n\nexport default SeasonDisplay;\n","import React from \"react\";\n\nconst Spinner = props => {\n  const { message } = props;\n  return (\n    <div className=\"ui active  dimmer\">\n      <div className=\"ui big text loader\">{message}</div>\n    </div>\n  );\n};\n\nSpinner.defaultProps = {\n  message: \"Loading...\"\n};\n\nexport default Spinner;\n","import React, { Component } from \"react\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from \"./Spinner\";\n\nclass App extends Component {\n  state = {\n    lat: null,\n    errorMessage: \"\"\n  };\n\n  componentDidMount = () => {\n    // Get User Position and update state\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        const { latitude } = position.coords;\n        this.setState({ lat: latitude });\n      },\n      err => {\n        this.setState({ errorMessage: err.message });\n      }\n    );\n  };\n\n  renderContent() {\n    const { lat, errorMessage } = this.state;\n\n    if (errorMessage && !lat) {\n      return <h1>Error: {errorMessage}</h1>;\n    } else if (!errorMessage && lat) {\n      return <SeasonDisplay lat={lat} />;\n    } else {\n      return <Spinner message=\"Please accept location request\" />;\n    }\n  }\n  render() {\n    return <div className=\"App\">{this.renderContent()}</div>;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}